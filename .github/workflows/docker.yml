name: Deploy React to Docker Hub

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE_NAME: sounghan94/hof-front
  DOCKER_TAG: latest  # 또는 원하는 태그

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Dependencies 
      run: yarn install

    - name: Build React App
      run: yarn build

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker Image
      run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }} .

    - name: Push Docker Image to Docker Hub
      run: docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          CONTAINER_NAME="hof-front-container"
          IMAGE_NAME="${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}"

          # 기존 컨테이너 중지 및 삭제
          if sudo docker ps -a --format "{{.Names}}" | grep -w "$CONTAINER_NAME"; then
            echo "Stopping and removing existing container: $CONTAINER_NAME"
            sudo docker stop $CONTAINER_NAME
            sudo docker rm $CONTAINER_NAME
          fi
          
          # 최신 이미지 Pull
          echo "Pulling the latest Docker image: $IMAGE_NAME"
          sudo docker pull $IMAGE_NAME
          
          # 새 컨테이너 실행 
          echo "Starting a new container: $CONTAINER_NAME"
          sudo docker run -d --name $CONTAINER_NAME -p 8082:80 $IMAGE_NAME
